cmake_minimum_required(VERSION 3.14)

file(GLOB SHADERS
	"${CMAKE_SOURCE_DIR}/Shaders/SFX/*.sfx"
)

file(GLOB CORE_SHADER_INCLUDES
	"${CMAKE_SOURCE_DIR}/Platform/Shaders/SL/*.sl"
	"${SIMUL_PLATFORM_DIR}/DirectX11/HLSL/*.sl"
)

file(GLOB SHADER_INCLUDES
	"${CMAKE_SOURCE_DIR}/Shaders/SL/*.sl"
)

source_group("Shaders" FILES  ${SHADERS} )
source_group("Shader Includes" FILES ${SHADER_INCLUDES} )
source_group("Core Includes" FILES ${CORE_SHADER_INCLUDES} )

if(XBOXONE)
	set( JSON_FILE "${SIMUL_PLATFORM_DIR}/XboxOne/HLSL/HLSL11.json" )
elseif(GDK AND NOT PLATFORM_WINGDK)
	set( JSON_FILE "${SIMUL_PLATFORM_DIR}/XboxOne/HLSL/HLSL11X.json" )
else()
	set( JSON_FILE "${SIMUL_PLATFORM_DIR}/DirectX11/Sfx/DirectX11.json" )
endif() 

if(SIMUL_SUPPORT_D3D11)
	if(PLATFORM_D3D11_SFX)
		add_sfx_shader_project( DirectX11Shaders ${JSON_FILE} INCLUDES "${SIMUL_PLATFORM_DIR}/DirectX11/Sfx" "${SIMUL_DIR}/Shaders/SL" "${SIMUL_PLATFORM_DIR}/Shaders/SL" SOURCES ${SHADERS} ${SHADER_INCLUDES} ${CORE_SHADER_INCLUDES} OPTIONS -w OUTPUT "${CMAKE_BINARY_DIR}/Platform/DirectX11/shaderbin" DEFINES SIMUL_XDK_VERSION=${XDK_TOOLCHAIN_VERSION} PLATFORM_D3D11_SFX=1)
	else()
		add_fx_shader_project( DirectX11Shaders SOURCES ${SHADERS} ${SHADER_INCLUDES} ${CORE_SHADER_INCLUDES} INCLUDES "${CMAKE_SOURCE_DIR}/Platform/DirectX11/HLSL" "${CMAKE_SOURCE_DIR}/Shaders/SL" "${CMAKE_SOURCE_DIR}/Platform/Shaders/SL" "${CMAKE_SOURCE_DIR}/Platform/CrossPlatform/SL" OUTPUT "${CMAKE_BINARY_DIR}/Platform/DirectX11/shaderbin" DEFINES SIMUL_XDK_VERSION=${XDK_TOOLCHAIN_VERSION} PLATFORM_D3D11_SFX=0)
	endif()
endif() 