#version 450
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_bindless_texture : enable

#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/build/Platform/OpenGL/sfx_intermediate/terrain_PS_Main.glsl"
#define GLSL 1
#define SFX 1
#define SFX_GLSL 1
#define SFX_OPENGL 1
#define SFX_TYPED_UAV_LOADS 1
#define uint64_t uvec2
#pragma warning(disable:1)
#line 33 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SL/simul_terrain_constants.sl"
layout(std140, binding = 10) uniform TerrainConstants
{
	mat4 worldViewProj;
	vec4 eyePosition;
	vec3 lightDir;
	float pad1;
	vec3 sunlight;
	float pad2;
	vec3 ambientColour;
	float pad3;
	vec3 cloudScales;
	float cloudInterp;
	vec3 cloudOffset;
	float morphFactor;
	mat4 invShadowMatrix;
	float extentZKmXXX;
	float startZKmXXXX;
	float shadowRange;
	float pad4;
	vec3 lightningCentre;
	float pad5;
	vec3 lightningColour;
	float pad6;
};


#line 28 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SFX/terrain.sfx"
struct vertexOutput
{
	vec4 hPosition;
	vec4 normal;
	vec2 texcoord;
	vec4 wPosition;
};
layout(std140, binding = 0) uniform _TextureHandles_c
{
	uint64_t cloudShadowTexture[24];
	uint64_t textureArray[24];
};
#line 15 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
float saturate(float value)
{
return clamp(value,0.0,1.0);
}
#line 16 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec2 saturate(vec2 vvalue)
{
return clamp(vvalue,vec2(0.0,0.0),vec2(1.0,1.0));
}
#line 17 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec3 saturate(vec3 vvalue)
{
return clamp(vvalue,vec3(0.0,0.0,0.0),vec3(1.0,1.0,1.0));
}
#line 18 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec4 saturate(vec4 vvalue)
{
return clamp(vvalue,vec4(0.0,0.0,0.0,0.0),vec4(1.0,1.0,1.0,1.0));
}
#line 20 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec4 mul(mat4 mat, vec4 vec)
{
return mat*vec;
}
#line 21 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec3 mul(mat3 mat, vec3 vec)
{
return mat*vec;
}
#line 22 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec2 mul(mat2 mat, vec2 vec)
{
return mat*vec;
}
#line 24 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec4 mul(vec4 vec, mat4 mat)
{
return vec*mat;
}
#line 25 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec3 mul(vec3 vec, mat3 mat)
{
return vec*mat;
}
#line 26 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec2 mul(vec2 vec, mat2 mat)
{
return vec*mat;
}
#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SL/cloud_shadow.sl"
float GetSimpleIlluminationAt(uint64_t cloudShadowTexture[24], mat4 invShadowMatrix, vec3 wpos)
{
vec3 texc=mul(invShadowMatrix,vec4(wpos,1.0)).xyz;
vec4 texel=textureLod(sampler2D(cloudShadowTexture[1 + 6]),texc.xy,0);
float above=saturate((texc.z-0.5)/0.5);
texel.a+=above;
return saturate(texel.a);
}
layout(location = 0) in Block
{
vertexOutput BlockData;
} ioblock;
layout(location = 0) out vec4 returnObject_vec4;

void main()
{
vertexOutput BlockData=ioblock.BlockData;
#line 77 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SFX/terrain.sfx"
vec4 result;
float interp=clamp(1.0-BlockData.wPosition.z/100.0,0.0,1.0);
vec4 layer1=textureLod(sampler2DArray(textureArray[1 + 7]),vec3(BlockData.texcoord,floor(interp)),0);
vec4 layer2=textureLod(sampler2DArray(textureArray[1 + 7]),vec3(BlockData.texcoord,floor(interp)+1.0),0);
vec4 texel=mix(layer1,layer2,interp);
float dotp=saturate(lightDir.z);
float from_lightning_centre_km=0.001*length(BlockData.wPosition.xy-lightningCentre.xy);
vec3 lightning=20*lightningColour.rgb*saturate(1.0/pow(from_lightning_centre_km+.0001,2.0));
vec3 light=ambientColour.rgb+dotp*sunlight.rgb+lightning.rgb;
light*=GetSimpleIlluminationAt(cloudShadowTexture,invShadowMatrix,BlockData.wPosition.xyz).x;
result.rgb=texel.rgb;
result.a=1.0;
{returnObject_vec4=result;}
}#version 450
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_bindless_texture : enable

#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/build/Platform/OpenGL/sfx_intermediate/terrain_PS_TestAlphaToCoverage.glsl"
#define GLSL 1
#define SFX 1
#define SFX_GLSL 1
#define SFX_OPENGL 1
#define SFX_TYPED_UAV_LOADS 1
#define uint64_t uvec2
#pragma warning(disable:1)

#line 49 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SFX/terrain.sfx"
struct testOutput
{
	vec4 hPosition;
	vec2 texCoords;
};
layout(std140, binding = 0) uniform _TextureHandles_c
{
	uint64_t grassTexture[24];
};
layout(location = 0) in Block
{
testOutput BlockData;
} ioblock;
layout(location = 0) out vec4 returnObject_vec4;

void main()
{
testOutput BlockData=ioblock.BlockData;
#line 67 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SFX/terrain.sfx"
vec4 texColor=texture(sampler2D(grassTexture[1 + 6]),BlockData.texCoords);
{returnObject_vec4=texColor;}
}#version 450
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_bindless_texture : enable

#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/build/Platform/OpenGL/sfx_intermediate/terrain_VS_Main_vv.glsl"
#define GLSL 1
#define SFX 1
#define SFX_GLSL 1
#define SFX_OPENGL 1
#define SFX_TYPED_UAV_LOADS 1
#define uint64_t uvec2
#pragma warning(disable:1)
#line 33 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SL/simul_terrain_constants.sl"
layout(std140, binding = 10) uniform TerrainConstants
{
	mat4 worldViewProj;
	vec4 eyePosition;
	vec3 lightDir;
	float pad1;
	vec3 sunlight;
	float pad2;
	vec3 ambientColour;
	float pad3;
	vec3 cloudScales;
	float cloudInterp;
	vec3 cloudOffset;
	float morphFactor;
	mat4 invShadowMatrix;
	float extentZKmXXX;
	float startZKmXXXX;
	float shadowRange;
	float pad4;
	vec3 lightningCentre;
	float pad5;
	vec3 lightningColour;
	float pad6;
};
#line 20 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SFX/terrain.sfx"
struct vertexInput
{
	vec3 position;
	vec3 normal;
	vec2 texcoord;
	float offset;
};
#line 28 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SFX/terrain.sfx"
struct vertexOutput
{
	vec4 hPosition;
	vec4 normal;
	vec2 texcoord;
	vec4 wPosition;
};
#line 20 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec4 mul(mat4 mat, vec4 vec)
{
return mat*vec;
}
#line 21 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec3 mul(mat3 mat, vec3 vec)
{
return mat*vec;
}
#line 22 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec2 mul(mat2 mat, vec2 vec)
{
return mat*vec;
}
#line 24 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec4 mul(vec4 vec, mat4 mat)
{
return vec*mat;
}
#line 25 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec3 mul(vec3 vec, mat3 mat)
{
return vec*mat;
}
#line 26 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec2 mul(vec2 vec, mat2 mat)
{
return vec*mat;
}
layout(location=0) in vec3 position;
layout(location=1) in vec3 normal;
layout(location=2) in vec2 texcoord;
layout(location=3) in float offset;

layout(location = 0) out Block
{
vertexOutput BlockData;
} ioblock;
void main()
{
vertexInput IN;
IN.position=position;
IN.normal=normal;
IN.texcoord=texcoord;
IN.offset=offset;
#line 31 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SFX/terrain.sfx"
vertexOutput OUT;
float dist=length(IN.position.xy);
float angle=atan(dist,6378000.0);
float cosine=cos(angle);
float dz=(1.0-cosine)*6378000.0;
vec3 pos=vec3(IN.position.xy,IN.position.z-dz);
OUT.hPosition=mul(worldViewProj,vec4(pos,1.0));
OUT.wPosition=vec4(IN.position.xyz,1.0);
OUT.texcoord=vec2(IN.position.xy/2000.0);
OUT.normal.xyz=IN.normal;
OUT.normal.a=0.5;
{
ioblock.BlockData=OUT;
gl_Position=OUT.hPosition;
}
}#version 450
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_bindless_texture : enable

#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/build/Platform/OpenGL/sfx_intermediate/terrain_VS_Main_ve.glsl"
#define GLSL 1
#define SFX 1
#define SFX_GLSL 1
#define SFX_OPENGL 1
#define SFX_TYPED_UAV_LOADS 1
#define uint64_t uvec2
#pragma warning(disable:1)
#line 33 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SL/simul_terrain_constants.sl"
layout(std140, binding = 10) uniform TerrainConstants
{
	mat4 worldViewProj;
	vec4 eyePosition;
	vec3 lightDir;
	float pad1;
	vec3 sunlight;
	float pad2;
	vec3 ambientColour;
	float pad3;
	vec3 cloudScales;
	float cloudInterp;
	vec3 cloudOffset;
	float morphFactor;
	mat4 invShadowMatrix;
	float extentZKmXXX;
	float startZKmXXXX;
	float shadowRange;
	float pad4;
	vec3 lightningCentre;
	float pad5;
	vec3 lightningColour;
	float pad6;
};
#line 20 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SFX/terrain.sfx"
struct vertexInput
{
	vec3 position;
	vec3 normal;
	vec2 texcoord;
	float offset;
};
#line 28 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SFX/terrain.sfx"
struct vertexOutput
{
	vec4 hPosition;
	vec4 normal;
	vec2 texcoord;
	vec4 wPosition;
};
#line 20 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec4 mul(mat4 mat, vec4 vec)
{
return mat*vec;
}
#line 21 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec3 mul(mat3 mat, vec3 vec)
{
return mat*vec;
}
#line 22 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec2 mul(mat2 mat, vec2 vec)
{
return mat*vec;
}
#line 24 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec4 mul(vec4 vec, mat4 mat)
{
return vec*mat;
}
#line 25 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec3 mul(vec3 vec, mat3 mat)
{
return vec*mat;
}
#line 26 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec2 mul(vec2 vec, mat2 mat)
{
return vec*mat;
}
layout(location=0) in vec3 position;
layout(location=1) in vec3 normal;
layout(location=2) in vec2 texcoord;
layout(location=3) in float offset;

layout(location = 0) out Block
{
vertexOutput BlockData;
} ioblock;
void main()
{
vertexInput IN;
IN.position=position;
IN.normal=normal;
IN.texcoord=texcoord;
IN.offset=offset;
#line 31 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SFX/terrain.sfx"
vertexOutput OUT;
float dist=length(IN.position.xy);
float angle=atan(dist,6378000.0);
float cosine=cos(angle);
float dz=(1.0-cosine)*6378000.0;
vec3 pos=vec3(IN.position.xy,IN.position.z-dz);
OUT.hPosition=mul(worldViewProj,vec4(pos,1.0));
OUT.wPosition=vec4(IN.position.xyz,1.0);
OUT.texcoord=vec2(IN.position.xy/2000.0);
OUT.normal.xyz=IN.normal;
OUT.normal.a=0.5;
{
ioblock.BlockData=OUT;
gl_Position=OUT.hPosition;
}
}#version 450
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_bindless_texture : enable

#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/build/Platform/OpenGL/sfx_intermediate/terrain_VS_TestAlphaToCoverage_vv.glsl"
#define GLSL 1
#define SFX 1
#define SFX_GLSL 1
#define SFX_OPENGL 1
#define SFX_TYPED_UAV_LOADS 1
#define uint64_t uvec2
#pragma warning(disable:1)
#line 99 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/SL/common.sl"
struct idOnly
{
	flat uint vertex_id;
};
#line 33 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SL/simul_terrain_constants.sl"
layout(std140, binding = 10) uniform TerrainConstants
{
	mat4 worldViewProj;
	vec4 eyePosition;
	vec3 lightDir;
	float pad1;
	vec3 sunlight;
	float pad2;
	vec3 ambientColour;
	float pad3;
	vec3 cloudScales;
	float cloudInterp;
	vec3 cloudOffset;
	float morphFactor;
	mat4 invShadowMatrix;
	float extentZKmXXX;
	float startZKmXXXX;
	float shadowRange;
	float pad4;
	vec3 lightningCentre;
	float pad5;
	vec3 lightningColour;
	float pad6;
};
#line 49 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SFX/terrain.sfx"
struct testOutput
{
	vec4 hPosition;
	vec2 texCoords;
};
#line 20 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec4 mul(mat4 mat, vec4 vec)
{
return mat*vec;
}
#line 21 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec3 mul(mat3 mat, vec3 vec)
{
return mat*vec;
}
#line 22 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec2 mul(mat2 mat, vec2 vec)
{
return mat*vec;
}
#line 24 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec4 mul(vec4 vec, mat4 mat)
{
return vec*mat;
}
#line 25 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec3 mul(vec3 vec, mat3 mat)
{
return vec*mat;
}
#line 26 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec2 mul(vec2 vec, mat2 mat)
{
return vec*mat;
}
layout(location = 0) out Block
{
testOutput BlockData;
} ioblock;
void main()
{
idOnly IN;
IN.vertex_id=gl_VertexID;
#line 51 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SFX/terrain.sfx"
testOutput OUT;
vec2 poss[4]={{1.0,-1.0},{1.0,1.0},{-1.0,-1.0},{-1.0,1.0},};
vec2 pos=poss[IN.vertex_id];
OUT.hPosition=mul(worldViewProj,vec4(1000.0*pos.x,0.0,1500+1000.0*pos.y,1.0));
OUT.texCoords=0.5*(vec2(1.0,1.0)+vec2(pos.x,pos.y));
{
ioblock.BlockData=OUT;
gl_Position=OUT.hPosition;
}
}#version 450
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_bindless_texture : enable

#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/build/Platform/OpenGL/sfx_intermediate/terrain_VS_TestAlphaToCoverage_ve.glsl"
#define GLSL 1
#define SFX 1
#define SFX_GLSL 1
#define SFX_OPENGL 1
#define SFX_TYPED_UAV_LOADS 1
#define uint64_t uvec2
#pragma warning(disable:1)
#line 99 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/SL/common.sl"
struct idOnly
{
	flat uint vertex_id;
};
#line 33 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SL/simul_terrain_constants.sl"
layout(std140, binding = 10) uniform TerrainConstants
{
	mat4 worldViewProj;
	vec4 eyePosition;
	vec3 lightDir;
	float pad1;
	vec3 sunlight;
	float pad2;
	vec3 ambientColour;
	float pad3;
	vec3 cloudScales;
	float cloudInterp;
	vec3 cloudOffset;
	float morphFactor;
	mat4 invShadowMatrix;
	float extentZKmXXX;
	float startZKmXXXX;
	float shadowRange;
	float pad4;
	vec3 lightningCentre;
	float pad5;
	vec3 lightningColour;
	float pad6;
};
#line 49 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SFX/terrain.sfx"
struct testOutput
{
	vec4 hPosition;
	vec2 texCoords;
};
#line 20 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec4 mul(mat4 mat, vec4 vec)
{
return mat*vec;
}
#line 21 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec3 mul(mat3 mat, vec3 vec)
{
return mat*vec;
}
#line 22 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec2 mul(mat2 mat, vec2 vec)
{
return mat*vec;
}
#line 24 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec4 mul(vec4 vec, mat4 mat)
{
return vec*mat;
}
#line 25 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec3 mul(vec3 vec, mat3 mat)
{
return vec*mat;
}
#line 26 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/OpenGL/GLSL/shader_platform.sl"
vec2 mul(vec2 vec, mat2 mat)
{
return vec*mat;
}
layout(location = 0) out Block
{
testOutput BlockData;
} ioblock;
void main()
{
idOnly IN;
IN.vertex_id=gl_VertexID;
#line 51 "D:/Jarvis/workspace/Simul/4.3/Simul/Shaders/SFX/terrain.sfx"
testOutput OUT;
vec2 poss[4]={{1.0,-1.0},{1.0,1.0},{-1.0,-1.0},{-1.0,1.0},};
vec2 pos=poss[IN.vertex_id];
OUT.hPosition=mul(worldViewProj,vec4(1000.0*pos.x,0.0,1500+1000.0*pos.y,1.0));
OUT.texCoords=0.5*(vec2(1.0,1.0)+vec2(pos.x,pos.y));
{
ioblock.BlockData=OUT;
gl_Position=OUT.hPosition;
}
}