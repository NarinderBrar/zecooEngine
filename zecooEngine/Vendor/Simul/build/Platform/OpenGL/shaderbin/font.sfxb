#version 450
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_bindless_texture : enable

//#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/build/Platform/OpenGL/../OpenGL/sfx_intermediate/font_BackgroundVertexShader_vv.glsl"
#define GLSL 1
#define SFX 1
#define SFX_GLSL 1
#define SFX_OPENGL 1
#define SFX_TYPED_UAV_LOADS 1
#define uint64_t uvec2
#pragma warning(disable:1)
struct idOnly
{
	flat uint vertex_id;
};
struct posTexVertexOutput
{
	vec4 hPosition;
	vec2 texCoords;
};
layout(std140, binding = 8) uniform TextConstants
{
	vec4 colour;
	vec4 background;
	vec4 background_rect;
};
//#line 230 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/Sfx/font.sfx"
posTexVertexOutput VS_ScreenQuad(idOnly IN, vec4 rect)
{
posTexVertexOutput OUT;
vec2 poss[4];
poss[0]=vec2(1.0,0.0);
poss[1]=vec2(1.0,1.0);
poss[2]=vec2(0.0,0.0);
poss[3]=vec2(0.0,1.0);
vec2 pos=poss[IN.vertex_id];
OUT.hPosition=vec4(rect.xy+rect.zw*pos,0.0,1.0);
OUT.hPosition.z=0.0;
OUT.texCoords=pos;
OUT.texCoords.y=1.0-OUT.texCoords.y;
return OUT;
}
layout(location = 0) out Block
{
posTexVertexOutput BlockData;
} ioblock;
void main()
{
idOnly IN;
IN.vertex_id=gl_VertexID;
//#line 675 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/Sfx/font.sfx"
posTexVertexOutput OUT=VS_ScreenQuad(IN,background_rect);
OUT.texCoords=vec2(0,0);
{
ioblock.BlockData=OUT;
gl_Position=OUT.hPosition;
}
}#version 450
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_bindless_texture : enable

//#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/build/Platform/OpenGL/../OpenGL/sfx_intermediate/font_BackgroundVertexShader_ve.glsl"
#define GLSL 1
#define SFX 1
#define SFX_GLSL 1
#define SFX_OPENGL 1
#define SFX_TYPED_UAV_LOADS 1
#define uint64_t uvec2
#pragma warning(disable:1)
struct idOnly
{
	flat uint vertex_id;
};
struct posTexVertexOutput
{
	vec4 hPosition;
	vec2 texCoords;
};
layout(std140, binding = 8) uniform TextConstants
{
	vec4 colour;
	vec4 background;
	vec4 background_rect;
};
//#line 230 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/Sfx/font.sfx"
posTexVertexOutput VS_ScreenQuad(idOnly IN, vec4 rect)
{
posTexVertexOutput OUT;
vec2 poss[4];
poss[0]=vec2(1.0,0.0);
poss[1]=vec2(1.0,1.0);
poss[2]=vec2(0.0,0.0);
poss[3]=vec2(0.0,1.0);
vec2 pos=poss[IN.vertex_id];
OUT.hPosition=vec4(rect.xy+rect.zw*pos,0.0,1.0);
OUT.hPosition.z=0.0;
OUT.texCoords=pos;
OUT.texCoords.y=1.0-OUT.texCoords.y;
return OUT;
}
layout(location = 0) out Block
{
posTexVertexOutput BlockData;
} ioblock;
void main()
{
idOnly IN;
IN.vertex_id=gl_VertexID;
//#line 675 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/Sfx/font.sfx"
posTexVertexOutput OUT=VS_ScreenQuad(IN,background_rect);
OUT.texCoords=vec2(0,0);
{
ioblock.BlockData=OUT;
gl_Position=OUT.hPosition;
}
}#version 450
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_bindless_texture : enable

//#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/build/Platform/OpenGL/../OpenGL/sfx_intermediate/font_FontBackgroundShader.glsl"
#define GLSL 1
#define SFX 1
#define SFX_GLSL 1
#define SFX_OPENGL 1
#define SFX_TYPED_UAV_LOADS 1
#define uint64_t uvec2
#pragma warning(disable:1)
struct posTexVertexOutput
{
	vec4 hPosition;
	vec2 texCoords;
};
layout(std140, binding = 8) uniform TextConstants
{
	vec4 colour;
	vec4 background;
	vec4 background_rect;
};
layout(location = 0) in Block
{
posTexVertexOutput BlockData;
} ioblock;
layout(location = 0) out vec4 returnObject_vec4;

void main()
{
posTexVertexOutput BlockData=ioblock.BlockData;
//#line 710 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/Sfx/font.sfx"
{returnObject_vec4=background;}
}#version 450
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_bindless_texture : enable

//#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/build/Platform/OpenGL/../OpenGL/sfx_intermediate/font_FontPixelShader.glsl"
#define GLSL 1
#define SFX 1
#define SFX_GLSL 1
#define SFX_OPENGL 1
#define SFX_TYPED_UAV_LOADS 1
#define uint64_t uvec2
#pragma warning(disable:1)
struct posTexVertexOutput
{
	vec4 hPosition;
	vec2 texCoords;
};
layout(std140, binding = 8) uniform TextConstants
{
	vec4 colour;
	vec4 background;
	vec4 background_rect;
};

layout(std140, binding = 0) uniform _TextureHandles_c
{
	uint64_t fontTexture[24];
};
layout(location = 0) in Block
{
posTexVertexOutput BlockData;
} ioblock;
layout(location = 0) out vec4 returnObject_vec4;

void main()
{
posTexVertexOutput BlockData=ioblock.BlockData;
//#line 700 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/Sfx/font.sfx"
vec2 tc=BlockData.texCoords;
tc.y=1.0-tc.y;
vec4 lookup=colour*textureLod(sampler2D(fontTexture[1 + 9]),tc,0);
lookup.a=0;
{returnObject_vec4=lookup;}
}#version 450
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_bindless_texture : enable

//#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/build/Platform/OpenGL/../OpenGL/sfx_intermediate/font_FontVertexShader_vv.glsl"
#define GLSL 1
#define SFX 1
#define SFX_GLSL 1
#define SFX_OPENGL 1
#define SFX_TYPED_UAV_LOADS 1
#define uint64_t uvec2
#pragma warning(disable:1)
struct idOnly
{
	flat uint vertex_id;
};
struct posTexVertexOutput
{
	vec4 hPosition;
	vec2 texCoords;
};
struct FontChar
{
	vec4 text_rect;
	vec4 texc;
};
layout(std430, binding = 0) buffer fontChars_ssbo
{
	FontChar fontChars[]; 
};
//#line 230 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/Sfx/font.sfx"
posTexVertexOutput VS_ScreenQuad(idOnly IN, vec4 rect)
{
posTexVertexOutput OUT;
vec2 poss[4];
poss[0]=vec2(1.0,0.0);
poss[1]=vec2(1.0,1.0);
poss[2]=vec2(0.0,0.0);
poss[3]=vec2(0.0,1.0);
vec2 pos=poss[IN.vertex_id];
OUT.hPosition=vec4(rect.xy+rect.zw*pos,0.0,1.0);
OUT.hPosition.z=0.0;
OUT.texCoords=pos;
OUT.texCoords.y=1.0-OUT.texCoords.y;
return OUT;
}
layout(location = 0) out Block
{
posTexVertexOutput BlockData;
} ioblock;
void main()
{
idOnly IN;
IN.vertex_id=gl_VertexID;
//#line 682 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/Sfx/font.sfx"
uint char_index=IN.vertex_id/6;
uint vert_index=IN.vertex_id-(6*char_index);
uint ids[]={0,1,2,2,3,1};
FontChar f=fontChars[char_index];
idOnly cIN;
cIN.vertex_id=ids[vert_index];
f.text_rect.y*=-1;
f.text_rect.y-=f.text_rect.w;
posTexVertexOutput OUT=VS_ScreenQuad(cIN,f.text_rect);
OUT.texCoords=vec4(f.texc.xy+f.texc.zw*OUT.texCoords.xy,0.0,1.0).xy;
{
ioblock.BlockData=OUT;
gl_Position=OUT.hPosition;
}
}#version 450
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_bindless_texture : enable

//#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/build/Platform/OpenGL/../OpenGL/sfx_intermediate/font_FontVertexShader_ve.glsl"
#define GLSL 1
#define SFX 1
#define SFX_GLSL 1
#define SFX_OPENGL 1
#define SFX_TYPED_UAV_LOADS 1
#define uint64_t uvec2
#pragma warning(disable:1)
struct idOnly
{
	flat uint vertex_id;
};
struct posTexVertexOutput
{
	vec4 hPosition;
	vec2 texCoords;
};
struct FontChar
{
	vec4 text_rect;
	vec4 texc;
};
layout(std430, binding = 0) buffer fontChars_ssbo
{
	FontChar fontChars[]; 
};
//#line 230 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/Sfx/font.sfx"
posTexVertexOutput VS_ScreenQuad(idOnly IN, vec4 rect)
{
posTexVertexOutput OUT;
vec2 poss[4];
poss[0]=vec2(1.0,0.0);
poss[1]=vec2(1.0,1.0);
poss[2]=vec2(0.0,0.0);
poss[3]=vec2(0.0,1.0);
vec2 pos=poss[IN.vertex_id];
OUT.hPosition=vec4(rect.xy+rect.zw*pos,0.0,1.0);
OUT.hPosition.z=0.0;
OUT.texCoords=pos;
OUT.texCoords.y=1.0-OUT.texCoords.y;
return OUT;
}
layout(location = 0) out Block
{
posTexVertexOutput BlockData;
} ioblock;
void main()
{
idOnly IN;
IN.vertex_id=gl_VertexID;
//#line 682 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/Sfx/font.sfx"
uint char_index=IN.vertex_id/6;
uint vert_index=IN.vertex_id-(6*char_index);
uint ids[]={0,1,2,2,3,1};
FontChar f=fontChars[char_index];
idOnly cIN;
cIN.vertex_id=ids[vert_index];
f.text_rect.y*=-1;
f.text_rect.y-=f.text_rect.w;
posTexVertexOutput OUT=VS_ScreenQuad(cIN,f.text_rect);
OUT.texCoords=vec4(f.texc.xy+f.texc.zw*OUT.texCoords.xy,0.0,1.0).xy;
{
ioblock.BlockData=OUT;
gl_Position=OUT.hPosition;
}
}#version 450
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_bindless_texture : enable

//#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/build/Platform/OpenGL/../OpenGL/sfx_intermediate/font_FontVertexShader_vv.glsl"
#define GLSL 1
#define SFX 1
#define SFX_GLSL 1
#define SFX_OPENGL 1
#define SFX_TYPED_UAV_LOADS 1
#define uint64_t uvec2
#pragma warning(disable:1)
struct idOnly
{
	flat uint vertex_id;
};
struct posTexVertexOutput
{
	vec4 hPosition;
	vec2 texCoords;
};
struct FontChar
{
	vec4 text_rect;
	vec4 texc;
};
layout(std430, binding = 0) buffer fontChars_ssbo
{
	FontChar fontChars[]; 
};
//#line 230 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/Sfx/font.sfx"
posTexVertexOutput VS_ScreenQuad(idOnly IN, vec4 rect)
{
posTexVertexOutput OUT;
vec2 poss[4];
poss[0]=vec2(1.0,0.0);
poss[1]=vec2(1.0,1.0);
poss[2]=vec2(0.0,0.0);
poss[3]=vec2(0.0,1.0);
vec2 pos=poss[IN.vertex_id];
OUT.hPosition=vec4(rect.xy+rect.zw*pos,0.0,1.0);
OUT.hPosition.z=0.0;
OUT.texCoords=pos;
OUT.texCoords.y=1.0-OUT.texCoords.y;
return OUT;
}
layout(location = 0) out Block
{
posTexVertexOutput BlockData;
} ioblock;
void main()
{
idOnly IN;
IN.vertex_id=gl_VertexID;
//#line 682 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/Sfx/font.sfx"
uint char_index=IN.vertex_id/6;
uint vert_index=IN.vertex_id-(6*char_index);
uint ids[]={0,1,2,2,3,1};
FontChar f=fontChars[char_index];
idOnly cIN;
cIN.vertex_id=ids[vert_index];
f.text_rect.y*=-1;
f.text_rect.y-=f.text_rect.w;
posTexVertexOutput OUT=VS_ScreenQuad(cIN,f.text_rect);
OUT.texCoords=vec4(f.texc.xy+f.texc.zw*OUT.texCoords.xy,0.0,1.0).xy;
{
ioblock.BlockData=OUT;
gl_Position=OUT.hPosition;
}
}#version 450
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_bindless_texture : enable

//#line 6 "D:/Jarvis/workspace/Simul/4.3/Simul/build/Platform/OpenGL/../OpenGL/sfx_intermediate/font_FontVertexShader_ve.glsl"
#define GLSL 1
#define SFX 1
#define SFX_GLSL 1
#define SFX_OPENGL 1
#define SFX_TYPED_UAV_LOADS 1
#define uint64_t uvec2
#pragma warning(disable:1)
struct idOnly
{
	flat uint vertex_id;
};
struct posTexVertexOutput
{
	vec4 hPosition;
	vec2 texCoords;
};
struct FontChar
{
	vec4 text_rect;
	vec4 texc;
};
layout(std430, binding = 0) buffer fontChars_ssbo
{
	FontChar fontChars[]; 
};
//#line 230 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/Sfx/font.sfx"
posTexVertexOutput VS_ScreenQuad(idOnly IN, vec4 rect)
{
posTexVertexOutput OUT;
vec2 poss[4];
poss[0]=vec2(1.0,0.0);
poss[1]=vec2(1.0,1.0);
poss[2]=vec2(0.0,0.0);
poss[3]=vec2(0.0,1.0);
vec2 pos=poss[IN.vertex_id];
OUT.hPosition=vec4(rect.xy+rect.zw*pos,0.0,1.0);
OUT.hPosition.z=0.0;
OUT.texCoords=pos;
OUT.texCoords.y=1.0-OUT.texCoords.y;
return OUT;
}
layout(location = 0) out Block
{
posTexVertexOutput BlockData;
} ioblock;
void main()
{
idOnly IN;
IN.vertex_id=gl_VertexID;
//#line 682 "D:/Jarvis/workspace/Simul/4.3/Simul/Platform/Shaders/Sfx/font.sfx"
uint char_index=IN.vertex_id/6;
uint vert_index=IN.vertex_id-(6*char_index);
uint ids[]={0,1,2,2,3,1};
FontChar f=fontChars[char_index];
idOnly cIN;
cIN.vertex_id=ids[vert_index];
f.text_rect.y*=-1;
f.text_rect.y-=f.text_rect.w;
posTexVertexOutput OUT=VS_ScreenQuad(cIN,f.text_rect);
OUT.texCoords=vec4(f.texc.xy+f.texc.zw*OUT.texCoords.xy,0.0,1.0).xy;
{
ioblock.BlockData=OUT;
gl_Position=OUT.hPosition;
}
}